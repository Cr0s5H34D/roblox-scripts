local StackUnderground = false






if StackUnderground then
    ok = -10
else
    ok = 10
end
local times = 10
local event = game:GetService("ReplicatedStorage").RemoteFunction
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Sigmanic/ROBLOX/main/ModificationWallyUi", true))()
local w = library:CreateWindow("Auto Stack V3")
w:Section("Made by Evolyx#6366")
w:Section("Stacking")
local Toggle = w:Toggle('Stacking Enabled', {flag = "toggle1"})
w:Slider("Amount",
    {
        precise = false,
        default = 2,
        min = 1,
        max = 40,
    },
function(v)
	times = v
end)
w:Slider("Position X",
   {
        precise = false,
        default = 0,
        min = -20,
        max = 20,
    },
function(te)
 ok1 = te
end)
w:Slider("Position Y",
   {
        precise = false,
        default = 10,
        min = -20,
        max = 100,
    },
function(tet)
 ok = tet
end)
w:Slider("Position Z",
   {
        precise = false,
        default = 0,
        min = -20,
        max = 20,
    },
function(tetw)
 ok2 = tetw
end)
w:Slider("Rotation 1",
   {
        precise = false,
        default = 0,
        min = -90,
        max = 90,
    },
function(twwb)
 ok6 = twwb
end)
w:Slider("Rotation 2",
   {
        precise = false,
        default = 0,
        min = -90,
        max = 90,
    },
function(twwy)
 ok5 = twwy
end)
w:Slider("Rotation 3",
   {
        precise = false,
        default = 0,
        min = -90,
        max = 90,
    },
function(tww)
 ok3 = tww
end)
w:Slider("Rotation 4",
   {
        precise = false,
        default = -90,
        min = -90,
        max = 90,
    },
function(twwe)
 ok4 = twwe
end)
w:Button("Place Ace Pilot X", function()
	local A_1 = "Troops"
	local A_2 = "Place"
	local A_3 = "Ace Pilot"
	local A_4 = 
		{
			["Rotation"] = CFrame.new(0,5,0,0,0,0,0,0,0,0,-90,-90),
			["Position"] = game.Players.LocalPlayer.character.HumanoidRootPart.Position - Vector3.new(0,5,0)
		}
	local Event = game:GetService("ReplicatedStorage").RemoteFunction
	Event:InvokeServer(A_1, A_2, A_3, A_4)
end)
w:Button("Place Ace Pilot Z", function()
    	local A_1 = "Troops"
	local A_2 = "Place"
	local A_3 = "Ace Pilot"
	local A_4 = 
		{
			["Rotation"] = CFrame.new(0,5,0,0,0,90,-90), 
			["Position"] = game.Players.LocalPlayer.character.HumanoidRootPart.Position - Vector3.new(0,5,0)
		}
	local Event = game:GetService("ReplicatedStorage").RemoteFunction
	Event:InvokeServer(A_1, A_2, A_3, A_4)
end)
w:Section('Others')
w:Button('Upgrade All', function()
    	for index,value in pairs(game.Workspace.Towers:GetChildren()) do
		-- Script generated by R2Sv2
		-- R2Sv2 developed by Luckyxero

		local A_1 = "Troops"
		local A_2 = "Upgrade"
		local a7 = "Set"
		local A_3 = 
			{
				["Troop"] = value 
			}
		local Event = game:GetService("ReplicatedStorage").RemoteFunction
		Event:InvokeServer(A_1, A_2, a7, A_3)

	end
	wait(0.1)
end)
w:Button('Sell All', function()
    	for index,value in pairs(game.Workspace.Towers:GetChildren()) do
		-- Script generated by R2Sv2
		-- R2Sv2 developed by Luckyxero

		local A_1 = "Troops"
		local A_2 = "Sell"
		local A_3 = 
			{
				["Troop"] = value 
			}
		local Event = game:GetService("ReplicatedStorage").RemoteFunction
		Event:InvokeServer(A_1, A_2, A_3)

	end
	wait(0.1)
end)
w:Button("Change Target all", function()
	for index,value in pairs(game.Workspace.Towers:GetChildren()) do
		-- Script generated by R2Sv2
		-- R2Sv2 developed by Luckyxero

		local A_1 = "Troops"
		local A_2 = "Target"
		local er = "Set"
		local A_3 = 
			{
				["Troop"] = value 
			}
		local Event = game:GetService("ReplicatedStorage").RemoteFunction
		Event:InvokeServer(A_1, A_2, er, A_3)

	end
	wait(0.1)
end)
local Events = {
    ["Troops"] = {
        ["Place"] = function(Tower, PositionData)
            if w.flags.toggle1 and not PositionData.CuntEmpire then
                connection = game.Workspace.Towers.ChildAdded:Connect(function(v)
                    connection:Disconnect()
                    event:InvokeServer("Troops","Sell",{["Troop"] = v})
                    wait()
                    for c=1,times do
                        event:InvokeServer("Troops","Place",Tower,{["Rotation"] = CFrame.new(ok1,ok,ok2,ok6,ok5,ok3,ok4),["Position"] = Vector3.new(PositionData.Position.X,0,PositionData.Position.Z),["CuntEmpire"] = true})
                        wait(0.1)
                    end
                end)
            end
        end;
    }
}
OldNamecall = hookmetamethod(game, "__namecall", newcclosure(function(...)
    local Args = {...};
    local Self = table.remove(Args, 1);
    local Method = getnamecallmethod();
    EndOfFunc = false
    
    if (not checkcaller()) then
        if (table.find({"InvokeServer", "FireServer"}, Method)) then
            coroutine.wrap(function()
                local Select = table.remove(Args, 1);
                local Current = Events[Select];
                if (Current) then
                    Current = Current[table.remove(Args, 1)];
                    while (typeof(Current) == "table") do
                        Current = Current[table.remove(Args, 1)];
                    end;
                    if (typeof(Current) == "function") then
                        local a, b = pcall(Current, unpack(Args));
                        warn(a, b);
                    end;
                end;
            end)();
        end;
    end;
    return OldNamecall(...);
end));
